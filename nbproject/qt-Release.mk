#############################################################################
# Makefile for building: Guitar_learning
# Generated by qmake (2.01a) (Qt 4.8.1) on: ?? 5. ??? 20:19:28 2013
# Project:  nbproject/qt-Release.pro
# Template: app
# Command: c:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/qmake.exe -spec c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/win32-g++ VPATH=. -o qttmp-Release.mk nbproject/qt-Release.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc.exe
CXX           = g++.exe
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_NO_DEBUG -DQT_MULTIMEDIA_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_HAVE_MMX -DQT_HAVE_3DNOW -DQT_HAVE_SSE -DQT_HAVE_MMXEXT -DQT_HAVE_SSE2 -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I'c:/QtSDK/Desktop/Qt/4.8.1/mingw/include/QtCore' -I'c:/QtSDK/Desktop/Qt/4.8.1/mingw/include/QtGui' -I'c:/QtSDK/Desktop/Qt/4.8.1/mingw/include/QtMultimedia' -I'c:/QtSDK/Desktop/Qt/4.8.1/mingw/include' -I'c:/QtSDK/Desktop/Qt/4.8.1/mingw/include/ActiveQt' -I'.' -I'.' -I'nbproject' -I'.' -I'c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/win32-g++'
LINK        =        g++
LFLAGS        =        -Wl,-s -mthreads -Wl,-subsystem,windows
LIBS        =        -L'c:/QtSDK/Desktop/Qt/4.8.1/mingw/lib' -lmingw32 -lqtmain build/Release/MinGW_1-Windows/Guitar_learning_resource_res.o -lportaudio.dll -lprotobuf -lQtMultimedia4 -lQtGui4 -lQtCore4 
QMAKE         = c:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/qmake.exe
IDC           = c:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = build/Release/MinGW_1-Windows/Guitar_learning_resource_res.o
COPY          = cp
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = cp -r
DEL_FILE      = rm
DEL_DIR       = rmdir
MOVE          = mv
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = build/Release/MinGW_1-Windows/

####### Files

SOURCES       = Effect.cpp \
		ChordAnalyzer.cpp \
		main.cpp \
		Tuner.cpp \
		Bar.cpp \
		kiss_fft/kiss_fftndr.c \
		Mixer.cpp \
		Carriage.cpp \
		EffectEcho.cpp \
		kiss_fft/kiss_fftr.c \
		kiss_fft/kiss_fft.c \
		Metronome.cpp \
		Scholar.cpp \
		EffectPump.cpp \
		EffectDistortion.cpp \
		Tutor.cpp \
		Note.cpp \
		kiss_fft/kfc.c \
		LessonFile.pb.cc \
		SingleNote.cpp \
		LoadStore.cpp \
		Track.cpp \
		Chord.cpp \
		AudioIO.cpp \
		kiss_fft/kiss_fftnd.c \
		SingleToneAnalyzer.cpp \
		Lesson.cpp moc_Tutor.cpp \
		moc_Tuner.cpp \
		moc_AudioIO.cpp \
		moc_Scholar.cpp \
		moc_Note.cpp \
		moc_EffectDistortion.cpp \
		moc_EffectPump.cpp \
		moc_EffectEcho.cpp \
		moc_Effect.cpp \
		moc_Carriage.cpp \
		moc_ChordAnalyzer.cpp \
		moc_Mixer.cpp \
		moc_Bar.cpp \
		moc_SingleToneAnalyzer.cpp \
		moc_Metronome.cpp \
		qrc_Sounds.cpp \
		qrc_Images.cpp
OBJECTS       = build/Release/MinGW_1-Windows/Effect.o \
		build/Release/MinGW_1-Windows/ChordAnalyzer.o \
		build/Release/MinGW_1-Windows/main.o \
		build/Release/MinGW_1-Windows/Tuner.o \
		build/Release/MinGW_1-Windows/Bar.o \
		build/Release/MinGW_1-Windows/kiss_fftndr.o \
		build/Release/MinGW_1-Windows/Mixer.o \
		build/Release/MinGW_1-Windows/Carriage.o \
		build/Release/MinGW_1-Windows/EffectEcho.o \
		build/Release/MinGW_1-Windows/kiss_fftr.o \
		build/Release/MinGW_1-Windows/kiss_fft.o \
		build/Release/MinGW_1-Windows/Metronome.o \
		build/Release/MinGW_1-Windows/Scholar.o \
		build/Release/MinGW_1-Windows/EffectPump.o \
		build/Release/MinGW_1-Windows/EffectDistortion.o \
		build/Release/MinGW_1-Windows/Tutor.o \
		build/Release/MinGW_1-Windows/Note.o \
		build/Release/MinGW_1-Windows/kfc.o \
		build/Release/MinGW_1-Windows/LessonFile.pb.o \
		build/Release/MinGW_1-Windows/SingleNote.o \
		build/Release/MinGW_1-Windows/LoadStore.o \
		build/Release/MinGW_1-Windows/Track.o \
		build/Release/MinGW_1-Windows/Chord.o \
		build/Release/MinGW_1-Windows/AudioIO.o \
		build/Release/MinGW_1-Windows/kiss_fftnd.o \
		build/Release/MinGW_1-Windows/SingleToneAnalyzer.o \
		build/Release/MinGW_1-Windows/Lesson.o \
		build/Release/MinGW_1-Windows/moc_Tutor.o \
		build/Release/MinGW_1-Windows/moc_Tuner.o \
		build/Release/MinGW_1-Windows/moc_AudioIO.o \
		build/Release/MinGW_1-Windows/moc_Scholar.o \
		build/Release/MinGW_1-Windows/moc_Note.o \
		build/Release/MinGW_1-Windows/moc_EffectDistortion.o \
		build/Release/MinGW_1-Windows/moc_EffectPump.o \
		build/Release/MinGW_1-Windows/moc_EffectEcho.o \
		build/Release/MinGW_1-Windows/moc_Effect.o \
		build/Release/MinGW_1-Windows/moc_Carriage.o \
		build/Release/MinGW_1-Windows/moc_ChordAnalyzer.o \
		build/Release/MinGW_1-Windows/moc_Mixer.o \
		build/Release/MinGW_1-Windows/moc_Bar.o \
		build/Release/MinGW_1-Windows/moc_SingleToneAnalyzer.o \
		build/Release/MinGW_1-Windows/moc_Metronome.o \
		build/Release/MinGW_1-Windows/qrc_Sounds.o \
		build/Release/MinGW_1-Windows/qrc_Images.o
DIST          = 
QMAKE_TARGET  = Guitar_learning
DESTDIR        = dist/Release/MinGW_1-Windows/ #avoid trailing-slash linebreak
TARGET         = Guitar_learning.exe
DESTDIR_TARGET = dist/Release/MinGW_1-Windows/Guitar_learning.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: qttmp-Release.mk  $(DESTDIR_TARGET)

$(DESTDIR_TARGET): ui_Scholar.h ui_Tuner.h ui_Tutor.h $(OBJECTS) build/Release/MinGW_1-Windows/Guitar_learning_resource_res.o
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.Guitar_learning  $(LIBS)

build/Release/MinGW_1-Windows/Guitar_learning_resource_res.o: Guitar_learning_resource.rc
	windres -i Guitar_learning_resource.rc -o build/Release/MinGW_1-Windows/Guitar_learning_resource_res.o --include-dir=. $(DEFINES)

qttmp-Release.mk: nbproject/qt-Release.pro  c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/win32-g++/qmake.conf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/qconfig.pri \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/modules/qt_webkit_version.pri \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/qt_functions.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/qt_config.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/exclusive_builds.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/default_pre.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/win32/default_pre.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/release.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/default_post.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/win32/default_post.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/win32/rtti.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/win32/exceptions.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/win32/stl.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/shared.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/warn_on.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/qt.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/win32/thread.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/moc.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/win32/windows.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/resources.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/uic.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/yacc.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/lex.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/include_source_dir.prf \
		c:/QtSDK/Desktop/Qt/4.8.1/mingw/lib/qtmain.prl
	$(QMAKE) -spec c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/win32-g++ VPATH=. -o qttmp-Release.mk nbproject/qt-Release.pro
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/qconfig.pri:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/modules/qt_webkit_version.pri:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/qt_functions.prf:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/qt_config.prf:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/exclusive_builds.prf:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/default_pre.prf:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/win32/default_pre.prf:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/release.prf:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/default_post.prf:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/win32/default_post.prf:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/win32/rtti.prf:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/win32/exceptions.prf:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/win32/stl.prf:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/shared.prf:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/warn_on.prf:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/qt.prf:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/win32/thread.prf:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/moc.prf:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/win32/windows.prf:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/resources.prf:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/uic.prf:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/yacc.prf:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/lex.prf:
c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/include_source_dir.prf:
c:\QtSDK\Desktop\Qt\4.8.1\mingw\lib\qtmain.prl:
qmake:  FORCE
	@$(QMAKE) -spec c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/win32-g++ VPATH=. -o qttmp-Release.mk nbproject/qt-Release.pro

dist:
	$(ZIP) Guitar_learning.zip $(SOURCES) $(DIST) nbproject/nbproject/qt-Release.pro c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/qconfig.pri c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/modules/qt_webkit_version.pri c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/qt_functions.prf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/qt_config.prf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/exclusive_builds.prf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/default_pre.prf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/win32/default_pre.prf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/release.prf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/default_post.prf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/win32/default_post.prf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/win32/rtti.prf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/win32/exceptions.prf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/win32/stl.prf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/shared.prf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/warn_on.prf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/qt.prf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/win32/thread.prf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/moc.prf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/win32/windows.prf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/resources.prf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/uic.prf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/yacc.prf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/lex.prf c:/QtSDK/Desktop/Qt/4.8.1/mingw/mkspecs/features/include_source_dir.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\lib\qtmain.prl  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) build/Release/MinGW_1-Windows/Effect.o build/Release/MinGW_1-Windows/ChordAnalyzer.o build/Release/MinGW_1-Windows/main.o build/Release/MinGW_1-Windows/Tuner.o build/Release/MinGW_1-Windows/Bar.o build/Release/MinGW_1-Windows/kiss_fftndr.o build/Release/MinGW_1-Windows/Mixer.o build/Release/MinGW_1-Windows/Carriage.o build/Release/MinGW_1-Windows/EffectEcho.o build/Release/MinGW_1-Windows/kiss_fftr.o build/Release/MinGW_1-Windows/kiss_fft.o build/Release/MinGW_1-Windows/Metronome.o build/Release/MinGW_1-Windows/Scholar.o build/Release/MinGW_1-Windows/EffectPump.o build/Release/MinGW_1-Windows/EffectDistortion.o build/Release/MinGW_1-Windows/Tutor.o build/Release/MinGW_1-Windows/Note.o build/Release/MinGW_1-Windows/kfc.o build/Release/MinGW_1-Windows/LessonFile.pb.o build/Release/MinGW_1-Windows/SingleNote.o build/Release/MinGW_1-Windows/LoadStore.o build/Release/MinGW_1-Windows/Track.o build/Release/MinGW_1-Windows/Chord.o build/Release/MinGW_1-Windows/AudioIO.o build/Release/MinGW_1-Windows/kiss_fftnd.o build/Release/MinGW_1-Windows/SingleToneAnalyzer.o build/Release/MinGW_1-Windows/Lesson.o build/Release/MinGW_1-Windows/moc_Tutor.o build/Release/MinGW_1-Windows/moc_Tuner.o build/Release/MinGW_1-Windows/moc_AudioIO.o build/Release/MinGW_1-Windows/moc_Scholar.o build/Release/MinGW_1-Windows/moc_Note.o build/Release/MinGW_1-Windows/moc_EffectDistortion.o build/Release/MinGW_1-Windows/moc_EffectPump.o build/Release/MinGW_1-Windows/moc_EffectEcho.o build/Release/MinGW_1-Windows/moc_Effect.o build/Release/MinGW_1-Windows/moc_Carriage.o build/Release/MinGW_1-Windows/moc_ChordAnalyzer.o build/Release/MinGW_1-Windows/moc_Mixer.o build/Release/MinGW_1-Windows/moc_Bar.o build/Release/MinGW_1-Windows/moc_SingleToneAnalyzer.o build/Release/MinGW_1-Windows/moc_Metronome.o build/Release/MinGW_1-Windows/qrc_Sounds.o build/Release/MinGW_1-Windows/qrc_Images.o
	-$(DEL_FILE) build/Release/MinGW_1-Windows/Guitar_learning_resource_res.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) qttmp-Release.mk

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_Tutor.cpp moc_Tuner.cpp moc_AudioIO.cpp moc_Scholar.cpp moc_Note.cpp moc_EffectDistortion.cpp moc_EffectPump.cpp moc_EffectEcho.cpp moc_Effect.cpp moc_Carriage.cpp moc_ChordAnalyzer.cpp moc_Mixer.cpp moc_Bar.cpp moc_SingleToneAnalyzer.cpp moc_Metronome.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_Tutor.cpp moc_Tuner.cpp moc_AudioIO.cpp moc_Scholar.cpp moc_Note.cpp moc_EffectDistortion.cpp moc_EffectPump.cpp moc_EffectEcho.cpp moc_Effect.cpp moc_Carriage.cpp moc_ChordAnalyzer.cpp moc_Mixer.cpp moc_Bar.cpp moc_SingleToneAnalyzer.cpp moc_Metronome.cpp
moc_Tutor.cpp: ui_Tutor.h \
		Lesson.h \
		Track.h \
		Bar.h \
		SingleNote.h \
		Note.h \
		Chord.h \
		Scholar.h \
		ui_Scholar.h \
		effectpump.h \
		Effect.h \
		EffectDistortion.h \
		common.h \
		EffectEcho.h \
		AudioIO.h \
		Mixer.h \
		Carriage.h \
		Tutor.h \
		LoadStore.h \
		LessonFile.pb.h \
		Metronome.h \
		SingleToneAnalyzer.h \
		kiss_fft/kiss_fftr.h \
		kiss_fft/kiss_fft.h \
		ChordAnalyzer.h \
		Tuner.h \
		ui_Tuner.h \
		EffectPump.h \
		Tutor.h
	C:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 Tutor.h -o moc_Tutor.cpp

moc_Tuner.cpp: ui_Tuner.h \
		AudioIO.h \
		common.h \
		SingleToneAnalyzer.h \
		kiss_fft/kiss_fftr.h \
		kiss_fft/kiss_fft.h \
		Tuner.h
	C:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 Tuner.h -o moc_Tuner.cpp

moc_AudioIO.cpp: common.h \
		AudioIO.h
	C:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 AudioIO.h -o moc_AudioIO.cpp

moc_Scholar.cpp: ui_Scholar.h \
		effectpump.h \
		Effect.h \
		EffectDistortion.h \
		common.h \
		EffectEcho.h \
		AudioIO.h \
		Mixer.h \
		Lesson.h \
		Track.h \
		Bar.h \
		SingleNote.h \
		Note.h \
		Chord.h \
		Carriage.h \
		Tutor.h \
		ui_Tutor.h \
		Scholar.h \
		Metronome.h \
		SingleToneAnalyzer.h \
		kiss_fft/kiss_fftr.h \
		kiss_fft/kiss_fft.h \
		ChordAnalyzer.h \
		Tuner.h \
		ui_Tuner.h \
		LoadStore.h \
		LessonFile.pb.h \
		EffectPump.h \
		Scholar.h
	C:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 Scholar.h -o moc_Scholar.cpp

moc_Note.cpp: Note.h
	C:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 Note.h -o moc_Note.cpp

moc_EffectDistortion.cpp: Effect.h \
		common.h \
		EffectDistortion.h
	C:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 EffectDistortion.h -o moc_EffectDistortion.cpp

moc_EffectPump.cpp: Effect.h \
		EffectDistortion.h \
		common.h \
		EffectEcho.h \
		AudioIO.h \
		Mixer.h \
		EffectPump.h
	C:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 EffectPump.h -o moc_EffectPump.cpp

moc_EffectEcho.cpp: Effect.h \
		EffectEcho.h
	C:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 EffectEcho.h -o moc_EffectEcho.cpp

moc_Effect.cpp: Effect.h
	C:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 Effect.h -o moc_Effect.cpp

moc_Carriage.cpp: Note.h \
		SingleNote.h \
		Chord.h \
		Bar.h \
		Carriage.h
	C:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 Carriage.h -o moc_Carriage.cpp

moc_ChordAnalyzer.cpp: common.h \
		AudioIO.h \
		kiss_fft/kiss_fftr.h \
		kiss_fft/kiss_fft.h \
		ChordAnalyzer.h
	C:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 ChordAnalyzer.h -o moc_ChordAnalyzer.cpp

moc_Mixer.cpp: AudioIO.h \
		common.h \
		Mixer.h
	C:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 Mixer.h -o moc_Mixer.cpp

moc_Bar.cpp: SingleNote.h \
		Note.h \
		Chord.h \
		Bar.h
	C:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 Bar.h -o moc_Bar.cpp

moc_SingleToneAnalyzer.cpp: AudioIO.h \
		common.h \
		kiss_fft/kiss_fftr.h \
		kiss_fft/kiss_fft.h \
		SingleToneAnalyzer.h
	C:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 SingleToneAnalyzer.h -o moc_SingleToneAnalyzer.cpp

moc_Metronome.cpp: Mixer.h \
		AudioIO.h \
		common.h \
		Metronome.h
	C:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 Metronome.h -o moc_Metronome.cpp

compiler_rcc_make_all: qrc_Sounds.cpp qrc_Images.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_Sounds.cpp qrc_Images.cpp
qrc_Sounds.cpp: Sounds.qrc
	c:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/rcc.exe -name Sounds Sounds.qrc -o qrc_Sounds.cpp

qrc_Images.cpp: Images.qrc
	c:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/rcc.exe -name Images Images.qrc -o qrc_Images.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_Scholar.h ui_Tuner.h ui_Tutor.h
compiler_uic_clean:
	-$(DEL_FILE) ui_Scholar.h ui_Tuner.h ui_Tutor.h
ui_Scholar.h: Scholar.ui
	c:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/uic.exe Scholar.ui -o ui_Scholar.h

ui_Tuner.h: Tuner.ui
	c:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/uic.exe Tuner.ui -o ui_Tuner.h

ui_Tutor.h: Tutor.ui
	c:/QtSDK/Desktop/Qt/4.8.1/mingw/bin/uic.exe Tutor.ui -o ui_Tutor.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 



####### Compile

build/Release/MinGW_1-Windows/Effect.o: Effect.cpp Effect.h \
		AudioIO.h \
		common.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/Effect.o Effect.cpp

build/Release/MinGW_1-Windows/ChordAnalyzer.o: ChordAnalyzer.cpp ChordAnalyzer.h \
		common.h \
		AudioIO.h \
		kiss_fft/kiss_fftr.h \
		kiss_fft/kiss_fft.h \
		Chord.h \
		Note.h \
		SingleNote.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/ChordAnalyzer.o ChordAnalyzer.cpp

build/Release/MinGW_1-Windows/main.o: main.cpp AudioIO.h \
		common.h \
		Mixer.h \
		SingleToneAnalyzer.h \
		kiss_fft/kiss_fftr.h \
		kiss_fft/kiss_fft.h \
		ChordAnalyzer.h \
		Scholar.h \
		ui_Scholar.h \
		effectpump.h \
		Effect.h \
		EffectDistortion.h \
		EffectEcho.h \
		Lesson.h \
		Track.h \
		Bar.h \
		SingleNote.h \
		Note.h \
		Chord.h \
		Carriage.h \
		Tutor.h \
		ui_Tutor.h \
		LoadStore.h \
		LessonFile.pb.h \
		Metronome.h \
		Tuner.h \
		ui_Tuner.h \
		EffectPump.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/main.o main.cpp

build/Release/MinGW_1-Windows/Tuner.o: Tuner.cpp Tuner.h \
		ui_Tuner.h \
		AudioIO.h \
		common.h \
		SingleToneAnalyzer.h \
		kiss_fft/kiss_fftr.h \
		kiss_fft/kiss_fft.h \
		Note.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/Tuner.o Tuner.cpp

build/Release/MinGW_1-Windows/Bar.o: Bar.cpp Bar.h \
		SingleNote.h \
		Note.h \
		Chord.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/Bar.o Bar.cpp

build/Release/MinGW_1-Windows/kiss_fftndr.o: kiss_fft/kiss_fftndr.c kiss_fft/kiss_fftndr.h \
		kiss_fft/kiss_fft.h \
		kiss_fft/kiss_fftr.h \
		kiss_fft/kiss_fftnd.h \
		kiss_fft/_kiss_fft_guts.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/kiss_fftndr.o kiss_fft/kiss_fftndr.c

build/Release/MinGW_1-Windows/Mixer.o: Mixer.cpp Mixer.h \
		AudioIO.h \
		common.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/Mixer.o Mixer.cpp

build/Release/MinGW_1-Windows/Carriage.o: Carriage.cpp Carriage.h \
		Note.h \
		SingleNote.h \
		Chord.h \
		Bar.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/Carriage.o Carriage.cpp

build/Release/MinGW_1-Windows/EffectEcho.o: EffectEcho.cpp EffectEcho.h \
		Effect.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/EffectEcho.o EffectEcho.cpp

build/Release/MinGW_1-Windows/kiss_fftr.o: kiss_fft/kiss_fftr.c kiss_fft/kiss_fftr.h \
		kiss_fft/kiss_fft.h \
		kiss_fft/_kiss_fft_guts.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/kiss_fftr.o kiss_fft/kiss_fftr.c

build/Release/MinGW_1-Windows/kiss_fft.o: kiss_fft/kiss_fft.c kiss_fft/_kiss_fft_guts.h \
		kiss_fft/kiss_fft.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/kiss_fft.o kiss_fft/kiss_fft.c

build/Release/MinGW_1-Windows/Metronome.o: Metronome.cpp Metronome.h \
		Mixer.h \
		AudioIO.h \
		common.h \
		LoadStore.h \
		LessonFile.pb.h \
		Lesson.h \
		Track.h \
		Bar.h \
		SingleNote.h \
		Note.h \
		Chord.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/Metronome.o Metronome.cpp

build/Release/MinGW_1-Windows/Scholar.o: Scholar.cpp Scholar.h \
		ui_Scholar.h \
		effectpump.h \
		Effect.h \
		EffectDistortion.h \
		common.h \
		EffectEcho.h \
		AudioIO.h \
		Mixer.h \
		Lesson.h \
		Track.h \
		Bar.h \
		SingleNote.h \
		Note.h \
		Chord.h \
		Carriage.h \
		Tutor.h \
		ui_Tutor.h \
		LoadStore.h \
		LessonFile.pb.h \
		Metronome.h \
		SingleToneAnalyzer.h \
		kiss_fft/kiss_fftr.h \
		kiss_fft/kiss_fft.h \
		ChordAnalyzer.h \
		Tuner.h \
		ui_Tuner.h \
		EffectPump.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/Scholar.o Scholar.cpp

build/Release/MinGW_1-Windows/EffectPump.o: EffectPump.cpp EffectPump.h \
		Effect.h \
		EffectDistortion.h \
		common.h \
		EffectEcho.h \
		AudioIO.h \
		Mixer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/EffectPump.o EffectPump.cpp

build/Release/MinGW_1-Windows/EffectDistortion.o: EffectDistortion.cpp EffectDistortion.h \
		Effect.h \
		common.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/EffectDistortion.o EffectDistortion.cpp

build/Release/MinGW_1-Windows/Tutor.o: Tutor.cpp Tutor.h \
		ui_Tutor.h \
		Lesson.h \
		Track.h \
		Bar.h \
		SingleNote.h \
		Note.h \
		Chord.h \
		Scholar.h \
		ui_Scholar.h \
		effectpump.h \
		Effect.h \
		EffectDistortion.h \
		common.h \
		EffectEcho.h \
		AudioIO.h \
		Mixer.h \
		Carriage.h \
		Metronome.h \
		SingleToneAnalyzer.h \
		kiss_fft/kiss_fftr.h \
		kiss_fft/kiss_fft.h \
		ChordAnalyzer.h \
		Tuner.h \
		ui_Tuner.h \
		LoadStore.h \
		LessonFile.pb.h \
		EffectPump.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/Tutor.o Tutor.cpp

build/Release/MinGW_1-Windows/Note.o: Note.cpp Note.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/Note.o Note.cpp

build/Release/MinGW_1-Windows/kfc.o: kiss_fft/kfc.c kiss_fft/kfc.h \
		kiss_fft/kiss_fft.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/kfc.o kiss_fft/kfc.c

build/Release/MinGW_1-Windows/LessonFile.pb.o: LessonFile.pb.cc LessonFile.pb.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/LessonFile.pb.o LessonFile.pb.cc

build/Release/MinGW_1-Windows/SingleNote.o: SingleNote.cpp SingleNote.h \
		Note.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/SingleNote.o SingleNote.cpp

build/Release/MinGW_1-Windows/LoadStore.o: LoadStore.cpp LoadStore.h \
		LessonFile.pb.h \
		Lesson.h \
		Track.h \
		Bar.h \
		SingleNote.h \
		Note.h \
		Chord.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/LoadStore.o LoadStore.cpp

build/Release/MinGW_1-Windows/Track.o: Track.cpp Track.h \
		Bar.h \
		SingleNote.h \
		Note.h \
		Chord.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/Track.o Track.cpp

build/Release/MinGW_1-Windows/Chord.o: Chord.cpp Chord.h \
		Note.h \
		SingleNote.h \
		Bar.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/Chord.o Chord.cpp

build/Release/MinGW_1-Windows/AudioIO.o: AudioIO.cpp AudioIO.h \
		common.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/AudioIO.o AudioIO.cpp

build/Release/MinGW_1-Windows/kiss_fftnd.o: kiss_fft/kiss_fftnd.c kiss_fft/kiss_fftnd.h \
		kiss_fft/kiss_fft.h \
		kiss_fft/_kiss_fft_guts.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/kiss_fftnd.o kiss_fft/kiss_fftnd.c

build/Release/MinGW_1-Windows/SingleToneAnalyzer.o: SingleToneAnalyzer.cpp SingleToneAnalyzer.h \
		AudioIO.h \
		common.h \
		kiss_fft/kiss_fftr.h \
		kiss_fft/kiss_fft.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/SingleToneAnalyzer.o SingleToneAnalyzer.cpp

build/Release/MinGW_1-Windows/Lesson.o: Lesson.cpp Lesson.h \
		Track.h \
		Bar.h \
		SingleNote.h \
		Note.h \
		Chord.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/Lesson.o Lesson.cpp

build/Release/MinGW_1-Windows/moc_Tutor.o: moc_Tutor.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/moc_Tutor.o moc_Tutor.cpp

build/Release/MinGW_1-Windows/moc_Tuner.o: moc_Tuner.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/moc_Tuner.o moc_Tuner.cpp

build/Release/MinGW_1-Windows/moc_AudioIO.o: moc_AudioIO.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/moc_AudioIO.o moc_AudioIO.cpp

build/Release/MinGW_1-Windows/moc_Scholar.o: moc_Scholar.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/moc_Scholar.o moc_Scholar.cpp

build/Release/MinGW_1-Windows/moc_Note.o: moc_Note.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/moc_Note.o moc_Note.cpp

build/Release/MinGW_1-Windows/moc_EffectDistortion.o: moc_EffectDistortion.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/moc_EffectDistortion.o moc_EffectDistortion.cpp

build/Release/MinGW_1-Windows/moc_EffectPump.o: moc_EffectPump.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/moc_EffectPump.o moc_EffectPump.cpp

build/Release/MinGW_1-Windows/moc_EffectEcho.o: moc_EffectEcho.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/moc_EffectEcho.o moc_EffectEcho.cpp

build/Release/MinGW_1-Windows/moc_Effect.o: moc_Effect.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/moc_Effect.o moc_Effect.cpp

build/Release/MinGW_1-Windows/moc_Carriage.o: moc_Carriage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/moc_Carriage.o moc_Carriage.cpp

build/Release/MinGW_1-Windows/moc_ChordAnalyzer.o: moc_ChordAnalyzer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/moc_ChordAnalyzer.o moc_ChordAnalyzer.cpp

build/Release/MinGW_1-Windows/moc_Mixer.o: moc_Mixer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/moc_Mixer.o moc_Mixer.cpp

build/Release/MinGW_1-Windows/moc_Bar.o: moc_Bar.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/moc_Bar.o moc_Bar.cpp

build/Release/MinGW_1-Windows/moc_SingleToneAnalyzer.o: moc_SingleToneAnalyzer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/moc_SingleToneAnalyzer.o moc_SingleToneAnalyzer.cpp

build/Release/MinGW_1-Windows/moc_Metronome.o: moc_Metronome.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/moc_Metronome.o moc_Metronome.cpp

build/Release/MinGW_1-Windows/qrc_Sounds.o: qrc_Sounds.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/qrc_Sounds.o qrc_Sounds.cpp

build/Release/MinGW_1-Windows/qrc_Images.o: qrc_Images.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/MinGW_1-Windows/qrc_Images.o qrc_Images.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

